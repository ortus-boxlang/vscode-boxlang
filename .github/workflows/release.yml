name: Release
on:
  push:
    branches:
      - main
      - feature/build-test

  # Reusable workflow : Usually called by a `snapshot` workflow
  workflow_call:
    inputs:
      snapshot:
        description: "Is this a snapshot build?"
        required: false
        default: true
        type: boolean
  workflow_dispatch:
    inputs:
      publishMS:
        description: 'Publish to the VS Marketplace'
        type: boolean
        required: true
        default: false
      publishOVSX:
        description: 'Publish to OpenVSX'
        type: boolean
        required: true
        default: false
      publishGH:
        description: 'Publish to GitHub Releases'
        type: boolean
        required: true
        default: false
      skipChangelog:
        description: 'Prevent updates to changelog'
        type: boolean
        required: true
        default: false

env:
    JDK: 21
    SNAPSHOT: ${{ inputs.snapshot || false }}
    SKIP_CHANGELOG: ${{ inputs.skipChangelog || false }}

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    outputs:
      packageName: ${{ steps.setup.outputs.packageName }}
      tag: ${{ steps.setup.outputs.tag }}
      version: ${{ steps.setup.outputs.version }}
    permissions:
      checks: write
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JDK }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: "8.7"

      - name: Make resource lib folder
        run: mkdir -p resources/lib

      - name: Download BoxLang Runtime
        run: |
            cd resources/lib
            curl "https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/boxlang/1.0.1/boxlang-1.0.1.jar" -o boxlang.jar

      - name: Get Download MiniServer
        run: |
          cd resources/lib
          curl "https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/boxlang-runtimes/boxlang-miniserver/1.0.1/boxlang-miniserver-1.0.1.jar" -o boxlang-miniserver.jar

      - name: Setup Node
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 23
          registry-url: https://registry.npmjs.org/

      - name: Get LSP
        run: |
          npm i
          npm run download-lsp

      - name: Setup tag
        id: setup
        run: |
          $version = (Get-Content ./package.json -Raw | ConvertFrom-Json).version
          $name = (Get-Content ./package.json -Raw | ConvertFrom-Json).name
          $packageName =  $name + '-' + $version + '.vsix'
          Write-Host "tag: release/$version"
          Write-Output "tag=release/$version" >> $Env:GITHUB_OUTPUT
          Write-Output "version=$version" >> $Env:GITHUB_OUTPUT
          Write-Output "packageName=$packageName" >> $Env:GITHUB_OUTPUT
          Write-Output "TAG=release/$version" >> $Env:GITHUB_ENV
          Write-Output "VERSION=$version" >> $Env:GITHUB_ENV
          Write-Output "PACKAGENAME=$packageName" >> $Env:GITHUB_ENV
        shell: pwsh

      - name: Package VSIX
        run: |
          npx vsce package --out ${{ env.PACKAGENAME }}

      - name: Update changelog [unreleased] with latest version
        uses: thomaseizinger/keep-a-changelog-new-release@2.0.0
        if: env.SNAPSHOT == 'false' && env.SKIP_CHANGELOG == 'false'
        with:
          changelogPath: ./changelog.md
          tag: v${{ env.VERSION }}

      - name: Cleanup changelog
        run: |
          npm install -g markdownlint-cli
        # disabling this until I'm able to figure out why we only get the error below when running actions
        # changelog.md:41 MD012/no-multiple-blanks Multiple consecutive blank lines [Expected: 1; Actual: 2]
        #   markdownlint changelog.md --fix

      - name: Commit Changelog [unreleased] with latest version
        uses: EndBug/add-and-commit@v9.1.4
        if: env.SNAPSHOT == 'false' && env.SKIP_CHANGELOG == 'false'
        with:
          author_name: Github Actions
          author_email: info@ortussolutions.com
          message: "Finalized changelog for v${{ env.VERSION }}"
          add: changelog.md

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGENAME }}
          path: |
            ./${{ env.PACKAGENAME }}
            ./changelog.md
          if-no-files-found: error
  publishMS:
    name: Publish to VS marketplace
    runs-on: ubuntu-latest
    needs: package
    if: inputs.snapshot == 'false'
    steps:
      - uses: actions/checkout@v2
        if: env.SNAPSHOT == 'false'

      - uses: actions/download-artifact@v4
        if: env.SNAPSHOT == 'false'
        with:
          name: ${{ needs.package.outputs.packageName }}
          path: .tmp

      - name: Copy Changelog
        if: env.SNAPSHOT == 'false'
        run: |
          unzip -o .tmp/${{ needs.package.outputs.packageName }} -d .tmp/
          cp .tmp/changelog.md changelog.md

      - name: Publish to VS marketplace
        if: env.SNAPSHOT == 'false'
        run: npx vsce publish --packagePath ./${{ needs.package.outputs.packageName }} -p ${{ secrets.VSCE_PAT }}

  publishGH:
    name: Publish to GitHub releases
    runs-on: ubuntu-latest
    needs: package
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        if: env.SNAPSHOT == 'false'
        with:
          name: ${{ needs.package.outputs.packageName }}

      - name: Create Release
        if: env.SNAPSHOT == 'false'
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.package.outputs.tag }}
          release_name: Release ${{ needs.package.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload assets to a Release
        if: env.SNAPSHOT == 'false'
        uses: AButler/upload-release-assets@v2.0
        with:
          files: ${{ needs.package.outputs.packageName }}
          release-tag: ${{ needs.package.outputs.tag }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  prep_next_release:
    name: Prep Next Release
    if: github.ref != 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: [package]
    permissions:
      checks: write
      contents: write
    steps:
      - name: Checkout Development Repository
        uses: actions/checkout@v4
        with:
          ref: development

      - uses: actions/download-artifact@v4
        if: env.SNAPSHOT == 'false'
        with:
          name: ${{ needs.package.outputs.packageName }}
          path: .tmp

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: ${{ env.GRADLE }}

      - name: Copy Changelog
        run: |
          cp .tmp/changelog.md changelog.md

      - name: Bump Version
        run: |
          npm version patch --no-git-tag-version

      - name: Commit Version Bump
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: Github Actions
          author_email: info@ortussolutions.com
          message: "Version bump"
          add: |
            package.json
            changelog.md