name: Release
on:
  push:
    branches:
      - main
      - feature/build-test

  # Reusable workflow : Usually called by a `snapshot` workflow
  workflow_call:
    inputs:
      snapshot:
        description: "Is this a snapshot build?"
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      publishMS:
        description: 'Publish to the VS Marketplace'
        type: boolean
        required: true
        default: false
      publishOVSX:
        description: 'Publish to OpenVSX'
        type: boolean
        required: true
        default: false
      publishGH:
        description: 'Publish to GitHub Releases'
        type: boolean
        required: true
        default: false

env:
    JDK: 21
    SNAPSHOT: ${{ inputs.snapshot || false }}

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    outputs:
      packageName: ${{ steps.setup.outputs.packageName }}
      tag: ${{ steps.setup-tag.outputs.tag }}
      version: ${{ steps.setup-tag.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JDK }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: "8.7"

      - name: Make resource lib folder
        run: mkdir -p resources/lib

      - name: Download BoxLang Runtime
        run: |
            cd resources/lib
            curl "https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/boxlang/1.0.0-beta7/boxlang-1.0.0-beta7-all.jar" -o boxlang.jar

      - name: Get Download MiniServer
        run: |
          cd resources/lib
          curl "https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/boxlang-runtimes/boxlang-miniserver/1.0.0-beta7/boxlang-miniserver-1.0.0-beta7-all.jar" -o boxlang-miniserver.jar

      - name: Pull and Build LSP
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.boxlang_lsp_ssh_key }}
          repository: ortus-boxlang/boxlang-lsp
          ref: 7f8454a6df4652def239341b7132f97914682a86
          path: boxlang-lsp
      - name: Build LSP
        run: |
          mkdir -p boxlang-lsp/resources/libs
          cp resources/lib/boxlang.jar boxlang-lsp/resources/libs/boxlang-1.0.0-all.jar
          cd boxlang-lsp
          chmod +x ./gradlew
          ./gradlew :app:build -x test --stacktrace --console=plain
          cd ..
          cp boxlang-lsp/app/build/libs/boxlang-lsp-0.0.1-all.jar resources/lib/boxlang-lsp.jar


      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Setup tag
        id: setup-tag
        run: |
          $version = (Get-Content ./package.json -Raw | ConvertFrom-Json).version
          Write-Host "tag: release/$version"
          Write-Output "tag=release/$version" >> $Env:GITHUB_OUTPUT
          Write-Output "version=$version" >> $Env:GITHUB_OUTPUT
        shell: pwsh

      - name: Package VSIX
        run: |
          npm i
          echo "packageName=$(node -e "console.log(require('./package.json').name + '-' + require('./package.json').version + '.vsix')")" >> $GITHUB_OUTPUT
          npx vsce package --out ${{ steps.setup.outputs.packageName }}

      - name: Update changelog [unreleased] with latest version
        uses: thomaseizinger/keep-a-changelog-new-release@2.0.0
        if: env.SNAPSHOT == 'false'
        with:
          changelogPath: ./changelog.md
          tag: v${{ steps.setup.outputs.version }}

      - name: Cleanup changelog
        run: |
          npm install -g markdownlint-cli
          markdownlint changelog.md --fix

      - name: Commit Changelog [unreleased] with latest version
        uses: EndBug/add-and-commit@v9.1.4
        if: env.SNAPSHOT == 'false'
        with:
          author_name: Github Actions
          author_email: info@ortussolutions.com
          message: "Finalized changelog for v${{ steps.setup.outputs.version }}"
          add: changelog.md

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.setup.outputs.packageName }}
          path: |
            ./${{ steps.setup.outputs.packageName }}
            changelog.md
          if-no-files-found: error

  # publishMS:
  #   name: Publish to VS marketplace
  #   runs-on: ubuntu-latest
  #   needs: package
  #   steps:
  #     - uses: actions/checkout@v2
  #       if: env.SNAPSHOT == 'false'
  #     - uses: actions/download-artifact@v2
  #       if: env.SNAPSHOT == 'false'
  #       with:
  #         name: ${{ needs.package.outputs.packageName }}

  #     - name: Publish to VS marketplace
  #       if: env.SNAPSHOT == 'false'
  #       run: npx vsce publish --packagePath ./${{ needs.package.outputs.packageName }} -p ${{ secrets.VSCE_PAT }}

  # publishGH:
  #   name: Publish to GitHub releases
  #   runs-on: ubuntu-latest
  #   needs: package
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       if: env.SNAPSHOT == 'false'
  #       with:
  #         name: ${{ needs.package.outputs.packageName }}

  #     - name: Create Release
  #       if: env.SNAPSHOT == 'false'
  #       id: create-release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ needs.package.outputs.tag }}
  #         release_name: Release ${{ needs.package.outputs.version }}
  #         draft: false
  #         prerelease: false

  #     - name: Upload assets to a Release
  #       if: env.SNAPSHOT == 'false'
  #       uses: AButler/upload-release-assets@v2.0
  #       with:
  #         files: ${{ needs.package.outputs.packageName }}
  #         release-tag: ${{ needs.package.outputs.tag }}
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}