name: Version Bump

on:
  workflow_call:
    inputs:
      pre-release:
        description: "Whether the vsix should be packaged as a pre-release or not"
        required: true
        type: boolean
      ref:
        description: "The git reference to build from"
        required: true
        type: string
    outputs:
      newVersion:
        description: "The new version number"
        value: ${{ jobs.createReleaseVersion.outputs.newVersion }}
      isPatch:
        description: "If this build was a patch build"
        value: ${{ jobs.createReleaseVersion.outputs.isPatch }}

jobs:
  createReleaseVersion:
    name: Validate Version Number
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.setup.outputs.newVersion }}
      isPatch: ${{ steps.setup.outputs.isPatch }}
    steps:
        - name: Checkout Development Repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            ref: ${{ inputs.ref }}

        - name: Setup tag
          id: setup
          shell: pwsh
          env:
            PRE_RELEASE: ${{ inputs.pre-release }}
          run: |
            $version = (Get-Content ./package.json -Raw | ConvertFrom-Json).version
            $name = (Get-Content ./package.json -Raw | ConvertFrom-Json).name
            $packageName =  $name + '-' + $version + '.vsix'

            $major = [int]($version -split '\.')[0]
            $minor = [int]($version -split '\.')[1]
            $patch = [int]($version -split '\.')[2]

            # if the minor version is even it is a pre-release
            # we want to bump the minor version to the next odd number
            # and set the patch version to 0
            # if the minor version is odd it is a release
            # we want to keep the minor version the same
            # and bump the patch version to the next number

            $minorIsEven = $minor % 2 -eq 0

            $nextMinor = $minor
            $nextPatch = $patch

            if( $env:PRE_RELEASE -eq $true -and $minorIsEven -eq $true ) {
                Write-Host "Building a pre-release: bumping patch"
                $nextMinor = $minor
                $nextPatch += 1
            }
            elseif( $env:PRE_RELEASE -eq $true -and $minorIsEven -eq $false ) {
                Write-Host "Building a pre-release: setting new minor"
                $nextMinor = $minor + 1
                $nextPatch = 0
            }
            elseif( $env:PRE_RELEASE -eq $false -and $minorIsEven -eq $true ) {
                Write-Host "Building a full release: setting new minor"
                $nextMinor = $minor + 1
                $nextPatch = 0
            }
            elseif( $env:PRE_RELEASE -eq $false -and $minorIsEven -eq $false ) {
                Write-Host "Building a full release: bumping patch"
                $nextMinor = $minor
                $nextPatch += 1
            }

            $newVersion = "$major.$nextMinor.$nextPatch"
            $isPatch = $nextPath -ne 0
            echo "newVersion=$newVersion" >> $env:GITHUB_OUTPUT
            echo "isPatch=$isPatch" >> $env:GITHUB_OUTPUT
            npm version $newVersion --no-git-tag-version

            Write-Output "New version: $newVersion"

        - name: Update changelog [unreleased] with latest version
          uses: thomaseizinger/keep-a-changelog-new-release@2.0.0
          if: inputs.pre-release == false
          with:
            changelogPath: ./changelog.md
            tag: v${{ steps.setup.outputs.newVersion }}

        - name: Cleanup changelog
          if: inputs.pre-release == false
          run: |
            npm install -g markdownlint-cli
            markdownlint changelog.md --fix || true

        - name: Commit Changelog [unreleased] with latest version
          uses: EndBug/add-and-commit@v9.1.4
          if: inputs.pre-release == false
          with:
            author_name: Github Actions
            author_email: info@ortussolutions.com
            push: false
            message: "Finalized changelog for v${{ steps.setup.outputs.newVersion }}"
            add: changelog.md

        - name: Commit Version Bump
          uses: EndBug/add-and-commit@v9.1.4
          with:
            author_name: Github Actions
            author_email: info@ortussolutions.com
            message: "Version bump"
            tag: v${{ steps.setup.outputs.newVersion }}
            add: |
              package.json
